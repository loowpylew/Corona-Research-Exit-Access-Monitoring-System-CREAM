#BlueJ class context
comment0.target=Institute
comment0.text=\r\n\r\n\ @author\ A.A.Marczyk\ \r\n\ @version\ 09/11/20\r\n
comment1.params=
comment1.target=Institute()
comment1.text=\r\n\ constructor\r\n
comment10.params=
comment10.target=void\ resetAllPasses()
comment10.text=\r\n\ Resets\ all\ passes\:\ \ moves\ to\ 0,\ available\ hours\ left\ to\ allowable\ hours\r\n
comment11.params=id
comment11.target=void\ resetPass(int)
comment11.text=\r\n\ Resets\ one\ passes\:\ moves\ to\ 0,\ available\ hours\ left\ to\ allowable\ hours\r\n\r\n\ @param\ id\ of\ the\ pass\r\n
comment12.params=id
comment12.target=void\ moveOutside(int)
comment12.text=\r\n\ Moves\ a\ pass\ directly\ back\ to\ the\ Outside\ without\ affecting\ data\r\n\ and\ not\ using\ existing\ doors\r\n
comment13.params=
comment13.target=void\ evacuateAll()
comment13.text=\r\n\ In\ an\ emergency,\ evacuates\ all\ passes\ directly\ back\ to\ the\ Outside\ without\r\n\ affecting\ information\ and\ not\ using\ existing\ doors\r\n
comment14.params=
comment14.target=void\ loadRooms()
comment15.params=
comment15.target=void\ setUpDoors()
comment16.params=
comment16.target=void\ loadPasses()
comment17.params=id
comment17.target=Pass\ getPass(int)
comment17.text=\r\n\ Returns\ the\ pass\ with\ the\ pass\ id\ specified\ by\ the\ parameter\r\n\r\n\ @return\ the\ pass\ with\ the\ specified\ name\r\n
comment18.params=roomNo
comment18.target=Room\ getRoom(int)
comment18.text=\r\n\ Returns\ the\ room\ with\ the\ name\ specified\ by\ the\ parameter\r\n\r\n\ @param\ roomNo\ is\ the\ number\ of\ the\ required\ room\r\n\ @return\ the\ room\ with\ the\ specified\ name\r\n
comment19.params=dr
comment19.target=Door\ getDoor(int)
comment19.text=\r\n\ Returns\ the\ room\ with\ the\ name\ specified\ by\ the\ parameter\r\n\r\n\ @return\ the\ room\ with\ the\ specified\ name\r\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\r\n\ Returns\ all\ of\ the\ details\ of\ all\ rooms\ including\ the\ passes\r\n\ currently\ in\ each\ room,\ or\ "No\ passes"\r\n\r\n\ @return\ all\ of\ the\ details\ of\ all\ rooms\ including\ location\r\n\ of\ all\ passes\ currently\ in\ each\ room,\ or\ "No\ passes"\r\n
comment20.params=
comment20.target=void\ enter()
comment3.params=
comment3.target=java.lang.String\ getAllPassesInAllRooms()
comment3.text=\r\n\ Returns\ a\ String\ representation\ of\ all\ the\ passes\ in\ all\ rooms\r\n\r\n\ @return\ a\ String\ representation\ of\ all\ passes\ in\ all\ rooms,\ room\ code\r\n\ and\ name\ should\ be\ included\ at\ the\ start\ of\ the\ list\r\n
comment4.params=ps
comment4.target=int\ findPass(int)
comment4.text=\r\n\ Returns\ the\ name\ of\ the\ room\ which\ contains\ the\ specified\ pass\ or\ null\r\n\r\n\ @param\ ps\ -\ the\ specified\ pass\r\n\ @return\ the\ number\ of\ the\ Room\ which\ contains\ the\ pass,\ or\ -1\r\n
comment5.params=nm
comment5.target=int\ getRoomNo(java.lang.String)
comment5.text=\r\n\ Given\ the\ name\ of\ a\ room,\ returns\ the\ room\ code\r\n\ or\ null\ if\ room\ does\ not\ exist\r\n\r\n\ @param\ //name\ of\ room\r\n\ @return\ number\ of\ room,\ or\ -1\ if\ the\ room\ does\ not\ exist\r\n
comment6.params=rmNo
comment6.target=java.lang.String\ getAllPassesInRoom(int)
comment6.text=\r\n\ Returns\ a\ String\ representation\ of\ all\ the\ passes\ in\ specified\ room\r\n\r\n\ @return\ a\ String\ representation\ of\ all\ passes\ in\ specified\ room,\ or\r\n\ "No\ such\ room"\r\n\ @roomCode\ the\ room\ code\r\n
comment7.params=pNo
comment7.target=java.lang.String\ showPass(int)
comment7.text=\r\n\ Returns\ a\ String\ with\ all\ of\ the\ details\ of\ a\ Pass\r\n\r\n\ @param\ //passNo\ is\ the\ pass\ number\r\n\ @return\ all\ details\ of\ the\ Pass,\ or\ "No\ such\ Pass"\r\n
comment8.params=psId\ doorNo
comment8.target=boolean\ canMove(int,\ int)
comment8.text=\r\n\ Returns\ true\ if\ a\ Pass\ is\ allowed\ to\ move\ using\ the\ door,\ false\ otherwise\r\n\ A\ move\ can\ be\ made\ if\:\r\n\ the\ protection\ rating\ of\ the\ pass\ \ >\=\ the\ danger\ rating\ of\ the\ destination\ room\r\n\ AND\ the\ destination\ room\ is\ not\ full\r\n\ AND\ the\ pass\ has\ hours\ left\ >\=\ limit\ of\ the\ destination\ room\r\n\ AND\ the\ pass\ is\ currently\ in\ the\ source\ room\r\n\ AND\ the\ pass\ id\ is\ for\ a\ pass\ in\ the\ system\r\n\ AND\ the\ door\ number\ is\ the\ number\ for\ a\ door\ in\ the\ system\r\n\r\n\ @param\ psId\ \ \ is\ the\ id\ of\ the\ pass\ requesting\ the\ move\r\n\ @param\ doorNo\ is\ the\ number\ of\ the\ door\ through\ which\ the\ pass\ wants\ to\ move\r\n\ @return\ true\ if\ the\ pass\ is\ allowed\ in\ the\ move,\ false\ otherwise\r\n
comment9.params=psId\ doorNo
comment9.target=java.lang.String\ move(int,\ int)
comment9.text=\r\n\ Returns\ the\ result\ of\ a\ pass\ requesting\ to\ move\ by\ Door.\r\n\ A\ move\ will\ be\ successful\ if\:\r\n\ the\ protection\ rating\ of\ the\ pass\ \ >\=\ the\ danger\ rating\ of\ the\ destination\ room\r\n\ AND\ the\ destination\ room\ is\ not\ full\r\n\ AND\ the\ pass\ has\ sufficient\ hours\ left\ >\=\ limit\ of\ the\ destination\ room\r\n\ AND\ the\ pass\ is\ currently\ in\ the\ source\ room\r\n\ AND\ the\ pass\ id\ is\ for\ a\ pass\ in\ the\ system\r\n\ AND\ the\ door\ number\ is\ the\ number\ for\ a\ door\ in\ the\ system\r\n\ If\ the\ move\ can\ be\ made,\ the\ pass\ information\ is\ removed\ from\ the\ source\r\n\ room,\ added\ to\ the\ destination\ room\ and\ a\ suitable\ message\ returned.\r\n\ If\ move\ cannot\ be\ made,\ the\ state\ of\ the\ system\ remains\ unchanged\r\n\ and\ a\ message\ specifying\ the\ reason\ is\ returned.\r\n\r\n\ @param\ psId\ \ \ is\ the\ id\ of\ the\ pass\ requesting\ the\ move\r\n\ @param\ doorNo\ is\ the\ number\ of\ the\ door\ through\ which\ the\ pass\ wants\ to\ move\r\n\ @return\ a\ String\ giving\ the\ result\ of\ the\ request\r\n
numComments=21
